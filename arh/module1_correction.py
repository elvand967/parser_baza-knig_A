'''
В ходе начала разработки пытался масимально-много собрать информации с карточек книг домашней страницы (с пагинацией)
Вместе с тем на 2-ом этапе выяснелось, что по тегам списков <ul> с описанием товаров дублируется таже информация.
Что-бы не заморачиваться с фильтрацией требуемых элементов <li> и не получать дублирование проще было-бы
В module1.py из описания получить только:
 название книги;
 ссылку на ее страницу;
 номер страницы пагинации (для относительного временного котроля процеса).
А далее уже в module2.py получать требуемую информацию из <ul>, не заморачиваясь отсевом дублирующей

Вместе с тем  book_database.json, в результате 4-х часового парсинга, получен - который содержит около 55000 словарей.
Требуемы данными уже имеется на ряду с ненужными парами элементов словарей

Исходя из сложившейся ситуации в данный момент решил просто перезаписать book_database.json с сохранением требуемой информации,
а так-же добавить пару "id": 1 ... n

'''

import json
import os

# имя '.json' файла
filename = 'book_database.json'

# Если файл есть, откроем его для чтения и сохранения его данных в переменную data
if os.path.exists(filename):
    with open(filename, 'r', encoding='utf-8') as file:
        data = json.load(file)
else:
    raise SystemExit(f'Требуемый файл "{filename}" не найден.\nВыполнение программы остановлено.')


# Создаем новый список, содержащий обновленные словари
updated_data = []


# Переберем словари. Добавим "id" и оставим только "title" и "link"
for i, entry in enumerate(data):
    updated_entry = {
        'id': i+1,
        'title': entry['title'],
        'link': entry['link']
    }
    updated_data.append(updated_entry)
'''
Метод enumerate() в Python используется для перебора элементов в итерируемом объекте 
(например, списке, кортеже, строке и так далее) 
и предоставляет индекс (позицию) каждого элемента вместе с самим элементом. 
'''


# Сохраним обновленный JSON-файл
with open('book_database.json', 'w', encoding='utf-8') as file:
    json.dump(updated_data, file, ensure_ascii=False, indent=4)


# Выведите количество обработанных элементов в консоль
print(f"Количество обработанных элементов: {len(data)}")